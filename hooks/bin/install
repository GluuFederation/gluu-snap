#!/usr/bin/env python3

import os
import sys
import glob
import zipfile
import shutil

snap_dir = os.environ['SNAP']
snap_common_dir = os.environ['SNAP_COMMON']
sys.path.append(os.path.join(snap_dir, 'usr/lib/python3/dist-packages'))

print("Running install hook")

for f in glob.glob(os.path.join(snap_dir, 'etc/default/*')):
    shutil.copy(
            f,
            os.path.join(snap_common_dir, 'etc/default')
        )

# Extract community edition setup

setup_package = os.path.join(snap_dir, 'gluu-opt/dist/gluu/community-edition-setup.zip')
target_base = os.path.join(snap_common_dir, 'install')
target_dir = os.path.join(target_base, 'community-edition-setup')

ces_zip = zipfile.ZipFile(setup_package)
ces_base_dir = ces_zip.namelist()[0]
ces_zip.extractall(target_base)

if not os.path.exists(target_base):
    os.mkdir(target_base)

if os.path.exists(target_dir):
    shutil.rmtree(target_dir)

extract_dir = os.path.join(target_base, ces_base_dir)

shutil.copytree(extract_dir, target_dir)

shutil.rmtree(extract_dir)

jetty_tmp_logs_dir = '/tmp/hsperfdata_root/logs'

if not os.path.exists(jetty_tmp_logs_dir):
    os.makedirs(jetty_tmp_logs_dir)

gluu_dirs = [
    'etc/gluu',
    'run/jetty',
    'etc/certs',
    'etc/default',
    'gluu/bin',
    'gluu/jetty/temp',
    'gluu/jetty/oxauth',
    'gluu/jetty/identity',
    'gluu/log/apache2',
    'gluu/run/apache2',
    'run',
    'opendj',
    'var/gluu',
    'var/www/html',
    'gluu/shibboleth-idp',
    'gluu/oxd-server/run'
    ]
for d in gluu_dirs:
    path = os.path.join(snap_common_dir, d)
    os.makedirs(path, exist_ok=True)

os.system('cp $SNAP/gluu-opt/jre/lib/security/cacerts.bak $SNAP_COMMON/etc/certs/java-cacerts')

for s in ('opendj', 'apache2', 'passport', 'gluu-radius', 'oxd-server'):
    os.system('snapctl stop --disable gluu-server.' + s)

jetty_services = ['oxauth', 'identity', 'idp', 'oxauth-rp', 'casa', 'scim', 'fido2']

for service in jetty_services:
    state_fn = os.path.join(snap_common_dir, 'gluu/jetty', service, service+'.state')
    if not os.path.exists(state_fn):
        try:
            open(state_fn, 'w').close()
        except:
            print("Can't create", state_fn)
    cmd = 'snapctl stop --disable gluu-server.{}  '.format(service)
    os.system(cmd)

if not os.path.exists(os.path.join(snap_common_dir, 'etc/apache2')):
    shutil.copytree(
            os.path.join(snap_dir, 'etc/apache2.org'),
            os.path.join(snap_common_dir, 'etc/apache2')
            )

shutil.copy(
    os.path.join(snap_dir, 'etc/mime.types'),
    os.path.join(snap_common_dir, 'etc/apache2')
)

os.system("sed -i 's/\\/etc\\/mime.types/\\/etc\\/apache2\\/mime.types/g' {}".format(os.path.join(snap_common_dir, 'etc/apache2/mods-available/mime.conf')))

yacron_yaml = os.path.join(snap_common_dir, 'etc/cron-jobs.yaml')
if not os.path.exists(yacron_yaml):
    open(yacron_yaml, 'w').close()

shutil.copy(
    '/opt/dist/gluu/casa.pub',
    os.path.join(snap_common_dir, 'etc/certs')
)